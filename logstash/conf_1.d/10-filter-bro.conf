filter {

  ruby {
    code => 
    "
        if %{host}
            event['node_ids'] = %{host}
        end
        if !event['ts'].nil?
            event['ts'] = Time.at(event['ts'].to_f).utc.strftime('%FT%T.%L')
        end
        if !event['certificate.not_valid_before'].nil?
            event['certificate_not_valid_before'] = Time.at(event['certificate.not_valid_before'].to_f).utc.strftime('%FT%T.%L')
            event.remove('certificate.not_valid_before')
        end
        if !event['certificate.not_valid_after'].nil?
            event['certificate_not_valid_after'] = Time.at(event['certificate.not_valid_after'].to_f).utc.strftime('%FT%T.%L')
            event.remove('certificate.not_valid_after')
        end
        if !event['host'].nil?
            event['hosts'] = event['host']
            event.remove('host')
        end
    "
  }
    if [id.orig_h]{
        grok {
            match => {"id.orig_h" => ["%{IPV4:id_orig_h4}", "%{IPV6:id_orig_h6}"]}
            remove_field => ["id.orig_h"]
        }
    }
    if [id.resp_h]{
        grok {
            match => {"id.resp_h" => ["%{IPV4:id_resp_h4}", "%{IPV6:id_resp_h6}"]}
            remove_field => ["id.resp_h"]
        }
    }
    if [assigned_ip]{
        grok {
            match => {"assigned_ip" => ["%{IPV4:assigned_ip4}", "%{IPV6:assigned_ip6}"]}
            remove_field => ["assigned_ip"]
        }
    }
    if [x_originating_ip]{
        grok {
            match => {"x_originating_ip" => ["%{IPV4:x_originating_ip4}", "%{IPV6:x_originating_ip6}"]}
            remove_field => ["x_originating_ip"]
        }
    }
    if [src]{
        grok {
            match => {"src" => ["%{IPV4:scr_ip4}", "%{IPV6:src_ip6}"]}
            remove_field => ["src"]
        }
    }
    if [dst]{
        grok {
            match => {"dst" => ["%{IPV4:dst_ip4}", "%{IPV6:dst_ip6}"]}
            remove_field => ["dst"]
        }
    }
    mutate  {
        rename => {
            "certificate.curve" => "certificate_curve"
            "certificate.exponent" => "certificate_exponent"
            "certificate.issuer" => "certificate_issuer"
            "certificate.key_alg" => "certificate_key_alg"
            "certificate.key_length" => "certificate_key_length"
            "certificate.key_type" => "certificate_key_type"
            "certificate.serial" => "certificate_serial"
            "certificate.sig_alg" => "certificate_sig_alg"
            "certificate.subject" => "certificate_subject"
            "certificate.version" => "certificate_version"
            "id.orig_p" => "id_orig_p"
            "id.resp_p" => "id_resp_p"
            "remote_location.country_code" => "remote_location_country_code"
            "remote_location.city" => "remote_location_city"
            "san.dns" => "san_dns"
            "san.email" => "san_email"
            "san.ip" => "san_ip"
            "san.uri" => "san_uri"
            "version.addl" => "version_addl"
            "version.major" => "version_major"
            "version.minor" => "version_minor"
            "version.minor2" => "version_minor2"
            "version.minor3" => "version_minor3"
            "basic_constraints.ca" => "basic_constraints_ca"
            "remote_location.latitude" => "remote_location_latitude"
            "remote_location.longitude" => "remote_location_longitude"
        }
    }
}